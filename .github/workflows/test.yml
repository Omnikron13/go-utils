name: Tests

on:
  push:
    branches:
      - "main"
      - "staging"
  pull_request:
    branches:
      - "main"
      - "staging"

jobs:

  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        version: [ 'stable', 'oldstable' ]
        mod-dir:
          - maths
    runs-on: ${{ matrix.os }}
    env:
      commit_hash: $GITHUB_SHA
      commit_hash_short: $(git rev-parse --short "$GITHUB_SHA")

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.version }}

    - name: Build
      run: |
        cd ${{ matrix.mod-dir }}
        go build -v ./...

    - name: Test
      run: |
        cd ${{ matrix.mod-dir }}
        go test -v -cover -coverprofile=cover.out ./... | tee tests.out

    - name: Generate coverage JSON
      if: |
        matrix.os == 'ubuntu-latest' &&
        matrix.version == 'stable' &&
        github.event_name == 'push'
      run: |
        grep -P 'ok.+coverage:.+of statements' tests.out > tests_coverage.out
        sed -r "s/ok\s+(.+)\s+.+coverage:\s+([0-9]+\.[0-9]).+/{\"commit\":\"${{ env.commit_hash }}\",\"mod\":\"\1\",\"coverage\":\2}/" < tests_coverage.out > "${{ env.commit_hash }}.json"

    - name: Update coverage report
      if: |
        matrix.os == 'ubuntu-latest' &&
        matrix.version == 'stable' &&
        github.event_name == 'push'
      uses: ncruces/go-coverage-report@v0
      with:
        report: true
        chart: true
        amend: true
      continue-on-error: true

